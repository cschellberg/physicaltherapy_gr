//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.05.23 at 02:43:14 PM EDT 
//

package com.agileapps.pt.pojos;

import java.util.HashSet;
import java.util.List;
import java.util.Set;

import org.simpleframework.xml.Element;
import org.simpleframework.xml.ElementList;


public class QuestionAnswer {

	@Element
    private int id;
	@Element
    private InputType inputType;
	/*If this is 0 or greater, the answer will be used to form a composite key, for persisiting the document*/
	@Element(required=false)
    private int keyIndex=-1;
	@Element(required=false)
    private int answerWidth=-1;
	@Element
    private String question;
	@Element(required=false)
    private String answer;
	@ElementList(required=false)
	 private List<String>choiceList;
	
	private Set<Integer> widgetIdSet=new HashSet<Integer>();
	
	public int getId() {
		return id;
	}
	public void setId(int id) {
		this.id = id;
	}
	public InputType getInputType() {
		return inputType;
	}
	public void setInputType(InputType inputType) {
		this.inputType = inputType;
	}
	public String getQuestion() {
		return question;
	}
	public void setQuestion(String question) {
		this.question = question;
	}
	public String getAnswer() {
		return answer;
	}
	public void setAnswer(String answer) {
		this.answer = answer;
	}
	
	public List<String> getChoiceList() {
		return choiceList;
	}
	public void setChoiceList(List<String> choiceList) {
		this.choiceList = choiceList;
	}
	
	
	
    public int getKeyIndex() {
		return keyIndex;
	}
	public void setKeyIndex(int keyIndex) {
		this.keyIndex = keyIndex;
	}
	
	
	public int getAnswerWidth() {
		return answerWidth;
	}
	
	public void setAnswerWidth(int answerWidth) {
		this.answerWidth = answerWidth;
	}
	
	public Integer[] getWidgetIds() {
    	Integer returnArrays[]=new Integer[widgetIdSet.size()];
    	returnArrays= widgetIdSet.toArray( returnArrays);
    	return returnArrays;
	}
    
	public void addWidgetId(int widgetId) {
		widgetIdSet.add(widgetId);
	}
	   
	@Override
	public String toString() {
		return "QuestionAnswer [id=" + id + ", inputType=" + inputType
				+ ", keyIndex=" + keyIndex + ", question=" + question
				+ ", answer=" + answer + ", choiceList=" + choiceList + "]";
	}
	
	public void clear()
    {
    	answer=null;
    }
	public void clearWidgetIds() {
		widgetIdSet.clear();		
	}
	public boolean hasChoiceList() {
		return ( choiceList != null && choiceList.size() > 0);
	}
   
}
